day:4
Q1}Reverse the linked list (iterative method)


LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) 
{
    // Write your code here
    Node* prev=NULL;
    Node* curr=head;
    Node* forward=NULL;
    if(head==NULL || head->next==NULL){
        return head;
    }
    while(curr!=NULL){
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }
    return prev;
}


int getLength( Node* head){
    int len=0;
    while(head!=NULL)
    {
        head=head->next;
         len++;
    }
    return len;
}
Q2.] Find Middle Of Linked list

Node findMiddle(Node head) {
    // Write your code here
    int len=getLength(head);
    int ans=(len/2);

Node* temp=head;
int cnt=0;
while (cnt < ans) {
  temp = temp->next;
  cnt++;
}
return temp;
}
Q3}Merge two sorted Linked List

Node<int>* sortTwoLists(Node<int>* first, Node<int>* second)
{
    // Write your code here.
   Node<int>* head = new Node<int>(0);
   Node<int>* curr= head;
while(first != NULL && second != NULL){
    if(first->data <= second-> data){
        curr->next=first;
        first=first->next;

    } else {
      curr->next = second;
      second = second->next;
    }
    curr = curr->next;
}
if (first != NULL){
  curr->next = first;
}
if (second != NULL) {
  curr->next = second;
}
return head->next;

};
