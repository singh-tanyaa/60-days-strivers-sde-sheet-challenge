day5
https://leetcode.com/problems/intersection-of-two-linked-lists/

class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
         ListNode* curr=headA;
    int a=0,b=0;
    while(curr){
        a++;
        curr=curr->next;
    }
    curr=headB;
    while(curr){
        b++;
        curr=curr->next;

    }
    int diff=abs(a-b);
    if(a<b)
    {
      while (diff--) {
       headB = headB->next;
      }
    } else {
      while (diff--) {

        headA = headA->next;
      }
    }
    while(headA && headB){
      if (headA == headB) {
        return headA;
      }
      headA = headA->next;
      headB = headB->next;
    }
    return NULL;
}

};

q2}ROTATE IMAGE

https://leetcode.com/problems/rotate-image/

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
       
        int n=matrix.size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<=i;j++)
            {
                swap(matrix[i][j],matrix[j][i]);
            }
        }
        for(int i=0;i<n;i++){
            reverse(matrix[i].begin(),matrix[i].end());
        }
    }
};